class Solution {
   private static boolean[][] visited;
        private static int[][] grid;
        public int maxAreaOfIsland(int[][] grid) {
            this.grid = grid;
            visited = new boolean[grid.length][grid[0].length];
            int max = 0;
            for (int i = 0; i < grid.length; i++) {
                for (int j = 0; j < grid[0].length; j++) {
                    if (grid[i][j] == 1 && !visited[i][j]) {
                        int temp = recursive(i, j);
                        max = Math.max(max, temp);
                    }
                }
            }
            return max;
        }
        private static int recursive(int row, int col) {
            if (row < 0 || row >= grid.length
                    || col < 0 || col >= grid[0].length) {
                return 0;
            }
            if (grid[row][col] != 1) {
                return 0;
            }
            if (visited[row][col]) {
                return 0;
            }
            visited[row][col] = true;
            return 1 + recursive(row + 1, col)
                    + recursive(row - 1, col)
                    + recursive(row, col + 1)
                    + recursive(row, col - 1);
        }
}
