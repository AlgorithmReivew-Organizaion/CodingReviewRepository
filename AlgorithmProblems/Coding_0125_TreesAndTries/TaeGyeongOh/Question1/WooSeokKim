static class Solution {
        public boolean isSymmetric(TreeNode root) {

            if(root == null) return false;

            return check(root.left, root.right);
        }

        public boolean check(TreeNode leftNode, TreeNode rightNode){
            if(leftNode == null && rightNode == null) return true;
            if(leftNode == null || rightNode == null) return false;
            if(leftNode.val != rightNode.val) return false;
            //if(leftNode.val == rightNode.val) return true; //이 내용은 첫번째 조건에서 걸러진다. 어짜피 재귀가 끝까지 가야 하므로. 이 조건을 쓰면 중간에 끝나버릴 수 있음


            return check(leftNode.left, rightNode.right) && check(leftNode.right , rightNode.left);
        }
    }
