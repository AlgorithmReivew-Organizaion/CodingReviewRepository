class Solution {
    
        int maxValue = Integer.MIN_VALUE;
        public int maxPathSum(TreeNode root) {

            dfsSearch(root);
            return maxValue;
        }
        
        private int dfsSearch(TreeNode root){
            if(root == null) return 0;
            
            //왼쪽 제일 끝 노드부터 비교. 0과 비교하는 이유는 음수라면 제외하기 위해서!
            int leftMax = Math.max(dfsSearch(root.left), 0);
            //오른쪽도 마찬가지
            int rightMax = Math.max(dfsSearch(root.right), 0);
            
            //최대값을 계속 갱신해줌. 음수를 제외한 값들로 합을 구하고 기존의 최대값과 비교
            maxValue = Math.max(maxValue, leftMax + rightMax + root.val);
            
            //이건 한쪽으로만 연속 세개의 노드를 더할 경우를 생각한것. 왼쪽으로만 가거나 오른쪽으로만 갈때의 최대값과 루트값을 더한 값을 반환
            return Math.max(leftMax, rightMax) + root.val;
        }
}
