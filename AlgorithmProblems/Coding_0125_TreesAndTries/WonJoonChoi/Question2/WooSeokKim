class Solution {
        boolean check = false;
        public boolean isSubtree(TreeNode root, TreeNode subRoot) {
            if(root.val == subRoot.val && check == false){ //값이 같은 노드를 찾으면 그 아래부터 dfs 탐색을 통해 같은지 확인한다.
                check = checkByDFS(root, subRoot); //탐색후 boolean값을 check에 넣는다.
                if(check == true) return check; //만약 subtree와 같다면 true 반환.
            }
            //아니라면 root 노드를 이동하면서 다시 탐색 후 확인!
            if(root.left != null) isSubtree(root.left, subRoot);
            if(root.right != null) isSubtree(root.right, subRoot);

            return check;
        }

        public boolean checkByDFS(TreeNode root, TreeNode subRoot){
            if(root == null && subRoot == null) return true;
            if(root == null || subRoot == null) return false;
            if(root.val != subRoot.val) return false;

            return checkByDFS(root.left, subRoot.left) && checkByDFS(root.right, subRoot.right);
        }
    }
