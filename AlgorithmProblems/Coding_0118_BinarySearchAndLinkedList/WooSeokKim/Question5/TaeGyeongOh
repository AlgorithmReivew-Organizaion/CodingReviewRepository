//Linked_List_Random_Node
//https://leetcode.com/problems/linked-list-random-node/description/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
        
        private List<Integer> list = new ArrayList<>();
        private int size = Integer.MAX_VALUE;
        private ListNode temp = null;
        
        public Solution(ListNode head) {
            temp = head;
        }

        public int getRandom (){
            if (size != Integer.MAX_VALUE) {
                return list.get((int)(Math.random() * (size)));
            }
            else {
                while (temp != null) {
                    list.add(temp.val);
                    temp = temp.next;
                }
                size = list.size();
                return list.get((int) (Math.random() * (size)));
            }
        }
}
/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
