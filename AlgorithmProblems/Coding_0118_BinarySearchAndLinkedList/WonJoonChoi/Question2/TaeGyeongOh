/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode temp = head;
            int size = 0;
            while (temp != null) {
                size++;
                temp = temp.next;
            }
            if (size > 1 && n < size) {
                int idx = 1;
                ListNode curr = head;
                ListNode fast = head.next;
                while (idx < size - n) {
                    curr = curr.next;
                    fast = fast.next;
                    idx++;
                }
                if (fast != null) {
                    curr.next = fast.next;
                }
                
            }
            else {
                head = head.next;
                return head;
            }
            return head;
    }
}
